{
    "code1": "npm install â€“save permit-js \n\nyarn add permit-js",
    "code2": "import permit \n\npermit = permit.Permit(\n    token='permit_key_SECRET'\n)",
    "cookies": "@routes.get('/permit_login') \nasync def login(request):\n    tenant = request.query.get('tenant', 'default')\n    user_id = session.get_user_identifier(session)\n    token, url = await permit.elements.login_as(user_id, tenant)\n    return web.Response(status=302, headers={'Location': url})",
    "bearer": "@routes.get('/permit_login')\nasync def login(request):\n    tenant = request.query.get('tenant', 'default')\n    user_id = session.get_user_identifier(session)\n    token, url = await permit.elements.login_as(user_id, tenant)\n    url_obj = {'url': url}\n    return JsonResponse(text=f'{json.dumps(url_obj)}', content_type='application/json')",
    "elementLogin": "permit.elements.login({\n    loginUrl: 'https://your_app_url.com/permit_login,\n    tenant: 'your_tenant_key',\n    token:'<TOKEN>',\n    loginMethod: LoginMethod.bearer\n});",
    "code3": "permit.elements.login({\n    loginUrl: 'https://your_app_url.com/permit_login,\n    tenant: 'your_tenant_key'\n});",
    "code4": "permit.elements.login({\n    loginUrl: backendUrl,\n    tenant: 'new-tenant',\n    loginMethod: LoginMethod.header,\n    headers: {'<secure header name>': 'secret'}\n}).then((res: any) => {}"
}